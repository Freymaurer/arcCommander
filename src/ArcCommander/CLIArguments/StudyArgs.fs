namespace ArcCommander.CLIArguments

open Argu 

/// CLI arguments for empty study initialization
type StudyInitArgs =
    | [<Mandatory>][<Unique>] Identifier of study_identifier:string

    interface IArgParserTemplate with
        member this.Usage =
            match this with
            | Identifier _->    "A unique identifier, either a temporary identifier supplied by users or one generated by a repository or other database. For example, it could be an identifier complying with the LSID specification."

/// CLI arguments for updating existing study metadata
type StudyUpdateArgs =
    | [<Mandatory>][<Unique>] Identifier of study_identifier:string
    | [<Unique>] Title of title:string
    | [<Unique>] Description of description:string
    | [<Unique>] SubmissionDate of submission_date:string
    | [<Unique>] PublicReleaseDate of public_release_date:string

    interface IArgParserTemplate with
        member this.Usage =
            match this with
            | Identifier _->    "A unique identifier, either a temporary identifier supplied by users or one generated by a repository or other database. For example, it could be an identifier complying with the LSID specification."
            | Title _->         "A concise phrase used to encapsulate the purpose and goal of the study."
            | Description _->   "A textual description of the study, with components such as objective or goals."
            | SubmissionDate _->   "The date on which the study is submitted to an archive."
            | PublicReleaseDate _->   "The date on which the study SHOULD be released publicly."

/// CLI arguments for interactively editing existing study metadata 
// Same arguments as `init` because the study can be identified just by the identifier
type StudyEditArgs = StudyInitArgs

/// CLI arguments for registering existing study metadata 
// Same arguments as `update` because all metadata fields that can be updated can also be set while registering
type StudyRegisterArgs = StudyUpdateArgs

/// CLI arguments for initializing and subsequently registering study metadata 
// Same arguments as `update` because all metadata fields that can be updated can also be set while registering a new assay
type StudyAddArgs = StudyUpdateArgs

/// CLI arguments for study deletion
// same as `init` because both commands only need to be passed a study identifier
type StudyDeleteArgs = StudyInitArgs

/// CLI arguments for study removal
// same as `init` because both commands only need to be passed a study identifier
type StudyUnregisterArgs = StudyInitArgs

/// CLI arguments for study removal
// same as `init` because both commands only need to be passed a study identifier
type StudyRemoveArgs = StudyInitArgs

/// CLI arguments for getting a study
// same as `init` because both commands only need to be passed a study identifier
type StudyGetArgs = StudyInitArgs

/// CLI arguments for study Contacts
module StudyContacts = 

    /// CLI arguments for updating existing person metadata
    type PersonUpdateArgs =  
        | [<Mandatory>][<AltCommandLine("-s")>][<Unique>] StudyIdentifier of string
        | [<Mandatory>][<AltCommandLine("-l")>][<Unique>] LastName of last_name:string
        | [<Mandatory>][<AltCommandLine("-f")>][<Unique>] FirstName of first_name:string
        | [<AltCommandLine("-m")>][<Unique>] MidInitials of mid_initials:string
        | [<Unique>] Email of e_mail:string
        | [<Unique>] Phone of phone_number:string
        | [<Unique>] Fax of fax_number:string
        | [<Unique>] Address of adress:string
        | [<Unique>] Affiliation of affiliation:string
        | [<Unique>] Roles of roles:string
        | [<Unique>] RolesTermAccessionNumber of roles_term_accession_number:string
        | [<Unique>] RolesTermSourceREF of roles_term_source_ref:string
    

        interface IArgParserTemplate with
            member this.Usage =
                match this with
                | StudyIdentifier           _ -> "Identifier of the study the person is associated with"
                | LastName                  _ -> "The last name of a person associated with the study."
                | FirstName                 _ -> "The first name of a person associated with the study."
                | MidInitials               _ -> "The middle initials of a person associated with the study."
                | Email                     _ -> "The email address of a person associated with the study."
                | Phone                     _ -> "The telephone number of a person associated with the study."
                | Fax                       _ -> "The fax number of a person associated with the study."
                | Address                   _ -> "The address of a person associated with the study."
                | Affiliation               _ -> "The organization affiliation for a person associated with the study."
                | Roles                     _ -> "Term to classify the role(s) performed by this person in the context of the study, which means that the roles reported here need not correspond to roles held withing their affiliated organization. Multiple annotations or values attached to one person can be provided by using a semicolon (“;”) Unicode (U0003+B) as a separator (e.g.: submitter;funder;sponsor) .The term can be free text or from, for example, a controlled vocabulary or an ontology. If the latter source is used the Term Accession Number and Term Source REF fields below are required."
                | RolesTermAccessionNumber  _ -> "The accession number from the Term Source associated with the selected term."
                | RolesTermSourceREF        _ -> "dentifies the controlled vocabulary or ontology that this term comes from. The Source REF has to match one of the Term Source Names declared in the Ontology Source Reference section."

    /// CLI arguments for interactively editing existing person metadata 
    type PersonEditArgs = 
        | [<Mandatory>][<AltCommandLine("-s")>][<Unique>] StudyIdentifier of string
        | [<Mandatory>][<AltCommandLine("-l")>][<Unique>] LastName of last_name:string
        | [<Mandatory>][<AltCommandLine("-f")>][<Unique>] FirstName of first_name:string
        | [<AltCommandLine("-m")>][<Unique>] MidInitials of mid_initials:string
    
        interface IArgParserTemplate with
            member this.Usage =
                match this with
                | StudyIdentifier           _ -> "Identifier of the study the person is associated with"
                | LastName                  _ -> "The last name of a person associated with the study."
                | FirstName                 _ -> "The first name of a person associated with the study."
                | MidInitials               _ -> "The middle initials of a person associated with the study."

    /// CLI arguments for registering person metadata 
    // Same arguments as `update` because all metadata fields that can be updated can also be set while registering
    type PersonRegisterArgs = PersonUpdateArgs

    /// CLI arguments for person removal
    // Same arguments as `edit` because all metadata fields needed for identifying the person also have to be used when editing
    type PersonUnregisterArgs = PersonEditArgs

    /// CLI arguments for getting person
    // Same arguments as `edit` because all metadata fields needed for identifying the person also have to be used when editing
    type PersonGetArgs = PersonEditArgs

/// CLI arguments for study Contacts
module StudyPublications = 

    /// CLI arguments for updating existing publication metadata
    type PublicationUpdateArgs =  
        | [<Mandatory>][<AltCommandLine("-s")>][<Unique>] StudyIdentifier of string
        | [<Mandatory>][<AltCommandLine("-d")>][<Unique>] DOI of doi:string
        | [<AltCommandLine("-p")>][<Unique>] PubMedID of pubmed_id:string
        | [<Unique>] AuthorList of author_list:string
        | [<Unique>] Title of publication_title:string
        | [<Unique>] Status of publication_status:string
        | [<Unique>] StatusTermAccessionNumber of publication_status_term_accession_number:string
        | [<Unique>] StatusTermSourceREF of publication_status_term_source_ref:string

        interface IArgParserTemplate with
            member this.Usage =
                match this with
                | StudyIdentifier           _ -> "Identifier of the study the publication is associated with"
                | DOI                       _ -> "A Digital Object Identifier (DOI) for that publication (where available)."
                | PubMedID                  _ -> "The PubMed IDs of the described publication(s) associated with this study."
                | AuthorList                _ -> "The list of authors associated with that publication."
                | Title                     _ -> "The title of publication associated with the study."
                | Status                    _ -> "A term describing the status of that publication (i.e. submitted, in preparation, published)."
                | StatusTermAccessionNumber _ -> "The accession number from the Term Source associated with the selected term."
                | StatusTermSourceREF       _ -> "Identifies the controlled vocabulary or ontology that this term comes from. The Source REF has to match one the Term Source Name declared in the in the Ontology Source Reference section."

    /// CLI arguments for interactively editing existing publication metadata 
    type PublicationEditArgs = 
        | [<Mandatory>][<AltCommandLine("-s")>][<Unique>] StudyIdentifier of string
        | [<Mandatory>][<AltCommandLine("-d")>][<Unique>] DOI of doi:string
    
        interface IArgParserTemplate with
            member this.Usage =
                match this with
                | StudyIdentifier   _ -> "Identifier of the study the publication is associated with"
                | DOI               _ -> "A Digital Object Identifier (DOI) for that publication (where available)."

    /// CLI arguments for registering publication metadata 
    // Same arguments as `update` because all metadata fields that can be updated can also be set while registering
    type PublicationRegisterArgs = PublicationUpdateArgs

    /// CLI arguments for publication removal
    // Same arguments as `edit` because all metadata fields needed for identifying the publication also have to be used when editing
    type PublicationUnregisterArgs = PublicationEditArgs

    /// CLI arguments for getting publication
    // Same arguments as `edit` because all metadata fields needed for identifying the publication also have to be used when editing
    type PublicationGetArgs = PublicationEditArgs

/// CLI arguments for study Contacts
module StudyDesignDescriptors = 

    /// CLI arguments for updating existing design metadata
    type DesignUpdateArgs =  
        | [<Mandatory>][<AltCommandLine("-s")>][<Unique>] StudyIdentifier of string
        | [<Mandatory>][<AltCommandLine("-d")>][<Unique>] DesignType of design_type:string
        | [<Unique>] TypeTermAccessionNumber of type_term_accession_number:string
        | [<Unique>] TypeTermSourceREF of type_term_source_ref:string

        interface IArgParserTemplate with
            member this.Usage =
                match this with
                | StudyIdentifier           _ -> "Identifier of the study the design is associated with"
                | DesignType                _ -> "A term allowing the classification of the study based on the overall experimental design, e.g cross-over design or parallel group design. The term can be free text or from, for example, a controlled vocabulary or an ontology. If the latter source is used the Term Accession Number and Term Source REF fields below are required."
                | TypeTermAccessionNumber   _ -> "The accession number from the Term Source associated with the selected term."
                | TypeTermSourceREF         _ -> "Identifies the controlled vocabulary or ontology that this term comes from. The Study Design Term Source REF has to match one the Term Source Name declared in the Ontology Source Reference section."

    /// CLI arguments for interactively editing existing publication metadata 
    type DesignEditArgs = 
        | [<Mandatory>][<AltCommandLine("-s")>][<Unique>] StudyIdentifier of string
        | [<Mandatory>][<AltCommandLine("-d")>][<Unique>] DesignType of design_type:string
    
        interface IArgParserTemplate with
            member this.Usage =
                match this with
                | StudyIdentifier   _ -> "Identifier of the study the design is associated with"
                | DesignType        _ -> "A Digital Object Identifier (DOI) for that publication (where available)."

    /// CLI arguments for registering publication metadata 
    // Same arguments as `update` because all metadata fields that can be updated can also be set while registering
    type DesignRegisterArgs = PublicationUpdateArgs

    /// CLI arguments for publication removal
    // Same arguments as `edit` because all metadata fields needed for identifying the publication also have to be used when editing
    type DesignUnregisterArgs = PublicationEditArgs

    /// CLI arguments for getting design
    // Same arguments as `edit` because all metadata fields needed for identifying the publication also have to be used when editing
    type DesignGetArgs = PublicationEditArgs

